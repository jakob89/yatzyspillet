using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Yatzy
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        public Yatzy mitYatzy = new Yatzy();
        public Baeger mitBaeger = new Baeger(); // her newer man en instans af en klasse op, så man kan connecte en classe ind i formen. Dette gør, at klassen nu er brugbar i nedenstående.


        private void buttonKastTerninger_Click(object sender, EventArgs e) // Dette er knappen Kaster Terninger
        {



            mitBaeger.RystBaeger();                                     // her kalder vi metode RystBaeger, som vi har erklæret inde i bæger. Den er brugbar, fordi vi har "new'et" den up inde i denne klasse.
            richTextBoxTerning1.Text = mitBaeger.Terning1.Øjne.ToString();  // her henviser vi til teksten i tekstboksen for den første terning. Vi beder den indeholde bægerets øjne pr. terning og konvertere to string.
            richTextBoxTerning2.Text = mitBaeger.Terning2.Øjne.ToString();
            richTextBoxTerning3.Text = mitBaeger.Terning3.Øjne.ToString();
            richTextBoxTerning4.Text = mitBaeger.Terning4.Øjne.ToString();
            richTextBoxTerning5.Text = mitBaeger.Terning5.Øjne.ToString();

            VisMuligheder();
            
        }

        private void checkBoxHold1_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxHold1.Checked == true)    //metode for at holde terning1 -- dette er en kontrolstruktur (?)
                mitBaeger.Terning1.HoldTerning();   //kalder metode inde fra terningen, som instruerer i at holde på terningen
            else
            {
                mitBaeger.Terning1.TagTerningMed(); // kalder metode inde fra terningen, som instruerer i at tage terningen med. 
            }
        }

        private void checkBoxHold2_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxHold2.Checked == true)    //metode for at holde terning1
                mitBaeger.Terning2.HoldTerning();
            else
            {
                mitBaeger.Terning2.TagTerningMed();
            }
        }

        private void checkBoxHold3_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxHold3.Checked == true)    //metode for at holde terning1
                mitBaeger.Terning3.HoldTerning();
            else
            {
                mitBaeger.Terning3.TagTerningMed();
            }
        }

        private void checkBoxHold4_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxHold4.Checked == true)    //metode for at holde terning1
                mitBaeger.Terning4.HoldTerning();
            else
            {
                mitBaeger.Terning4.TagTerningMed();
            }
        }

        private void checkBoxHold5_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxHold5.Checked == true)    //metode for at holde terning1
                mitBaeger.Terning5.HoldTerning();
            else
            {
                mitBaeger.Terning5.TagTerningMed();
            }
        }

        private void buttonNytSpil_Click(object sender, EventArgs e)
        {

           
            
        }

        
      
        

        

        

        public void textBoxSpiller1_TextChanged(object sender, EventArgs e)
        {
            textBoxSpiller1.Text = mitYatzy._spiller1.Navn;
        }

        public void VisMuligheder()
        {
            listBoxMuligheder.Items.Clear();

            if (mitBaeger.PointEttere() > 0) { listBoxMuligheder.Items.Add("Ettere"); }
            if (mitBaeger.PointToere() > 0) { listBoxMuligheder.Items.Add("Toere"); }
            if (mitBaeger.PointTreere() > 0) { listBoxMuligheder.Items.Add("Treere"); }
            if (mitBaeger.PointFirere() > 0) { listBoxMuligheder.Items.Add("Fireere"); }
            if (mitBaeger.PointFemmere() > 0) { listBoxMuligheder.Items.Add("Femmere"); }
            if (mitBaeger.PointSeksere() > 0) { listBoxMuligheder.Items.Add("Seksere"); }
            if (mitBaeger.PointEtPar() > 0) { listBoxMuligheder.Items.Add("Et par"); }
            if (mitBaeger.PointToPar() > 0) { listBoxMuligheder.Items.Add("To par"); }
            if (mitBaeger.PointTreEns() > 0) { listBoxMuligheder.Items.Add("Tre ens"); }
            if (mitBaeger.PointFireEns() > 0) { listBoxMuligheder.Items.Add("Fire ens"); }
            if (mitBaeger.PointFuldHus() > 0) { listBoxMuligheder.Items.Add("Fuld hus"); }
            if (mitBaeger.PointLilleTrappe() > 0) { listBoxMuligheder.Items.Add("Lille trappe"); }
            if (mitBaeger.PointStorTrappe() > 0) { listBoxMuligheder.Items.Add("Stor trappe"); }
            if (mitBaeger.PointChance() > 0) { listBoxMuligheder.Items.Add("Chance"); }
            if (mitBaeger.PointYatzy() > 0) { listBoxMuligheder.Items.Add("Yatzy"); }
            

        }

        private void buttonVaelgMulighed_Click(object sender, EventArgs e)
        {
            switch (listBoxMuligheder.Text)
            {
                case "Ettere":
                    {
                        //minYatzyBlok,.Kolonnespiller1.Ettere.Point = mitBaeger.PointEttere();
                        //txtEnSp1.Text = Convert.ToString(minYatzyBlok.KolonneSpiller1.Ettere.Point);

                        //mitYatzy.AktivSpiller.Resultat.Kombinationer.Ettere = mitBaeger.PointEttere;
                        //textBoxEttereP1.Text = Convert.ToString(mitBaeger.PointEttere)
                        break;
                    }
            }
        }

        
    }
}
